name: run UI tests

on:
  schedule:
    - cron: '0 10 * * *'
  workflow_dispatch:


jobs:
  run-tests:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      ACTIVE_PROFILE: default
      CONFIG_URI: http://localhost:8088
      SPRING_PROFILES_ACTIVE: native
      EUREKA_HOSTNAME: localhost
      DB_USER: root
      DB_PASSWORD: somepassword

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Start MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -u root -proot -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '$DB_PASSWORD';"
          mysql -e "CREATE DATABASE IF NOT EXISTS orders; 
          CREATE DATABASE IF NOT EXISTS review;
          CREATE DATABASE IF NOT EXISTS product;
          CREATE DATABASE IF NOT EXISTS user;
          " -u$DB_USER -p$DB_PASSWORD
      - name: Run serverconfig
        env:
          SERVER_PORT: 8088
        run: |-
          cd api/serverconfig
          mvn spring-boot:run &
          sleep 1m
      - name: Run eurekaserver
        run: |-
          cd api/eurekaserver
          mvn spring-boot:run &
          sleep 1m
      - name: Run gateway-server
        run: |-
          cd api/gateway-server
          mvn spring-boot:run &
          sleep 1m
      - name: Run order-service
        run: |-
          cd api/order-service
          mvn spring-boot:run &
          sleep 1m
      - name: Run user-service
        run: |-
          cd api/user-service
          mvn spring-boot:run &
          sleep 1m
      - name: Run review-service
        run: |-
          cd api/review-service
          mvn spring-boot:run &
          sleep 1m
      - name: Run product-service
        run: |-
          cd api/product-service
          mvn spring-boot:run &
          sleep 1m
      - name: Set data
        run: |-
          mysql -u$DB_USER -p$DB_PASSWORD < api/docker/init.sql
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Enable KVM group perms  
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-ubuntu-${{ matrix.api-level }}-${{ env.cache-version }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Run device tests
        # See https://github.com/orgs/community/discussions/27121
        uses: reactivecircus/android-emulator-runner@v2
        with:
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          profile: pixel
          avd-name: pixel
          api-level: 34
          target: default
          working-directory: client
          script: |-
            ./gradlew app:connectedDebugAndroidTest --info --stacktrace --no-watch-fs -Dorg.gradle.workers.max=2

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/build/reports/*
      
      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: |
            **/build/outputs/*/connected/*
  report:
    runs-on: ubuntu-latest
    needs: run-tests 
    if: ${{ always() }}
    steps:
      - name: Download Test Reports Folder
        uses: actions/download-artifact@v4
        with:
          name: report

      - name: Android Test Report
        uses: asadmansr/android-test-report-action@v1.2.0

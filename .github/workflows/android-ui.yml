name: run UI tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DB_USER: root
      DB_PASSWORD: root

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE IF NOT EXISTS orders; 
          CREATE DATABASE IF NOT EXISTS review;
          CREATE DATABASE IF NOT EXISTS product;
          CREATE DATABASE IF NOT EXISTS user;
          create table if not exists orders.orders
          (
              id         bigint auto_increment primary key,
              created_at datetime     null,
              status     varchar(255) null,
              updated_at datetime     null,
              user_id    bigint       null
          );" -u$DB_USER -p$DB_PASSWORD
          mysql -e  "Select * from orders.orders;" -u$DB_USER -p$DB_PASSWORD
  # run-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'zulu'
  #       cache: gradle
    
  #   - name: Setup Gradle
  #     uses: gradle/gradle-build-action@v3
    
  #   - name: Build app
  #     run: |-
  #       cd client
  #       ./gradlew assembleDebug  app:assembleDebugAndroidTest
  #   - name: Run tests
  #     uses: emulator-wtf/run-tests@v0
  #     with:
  #       api-token: ${{ secrets.EW_API_TOKEN }}
  #       app: client/app/build/outputs/apk/debug/app-debug.apk
  #       test: client/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
  #       outputs-dir: build/test-results
  #       devices: |
  #         model=Pixel2,version=29
  #       record-video: true
  #   - name: Publish test report
  #     uses: mikepenz/action-junit-report@v2
  #     if: always()
  #     with:
  #       report_paths: 'build/test-results/**/*.xml'